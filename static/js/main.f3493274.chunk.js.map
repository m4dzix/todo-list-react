{"version":3,"sources":["features/tasks/TasksPage/Form/styled.js","features/tasks/tasksLocalStorage.js","features/tasks/tasksSlice.js","features/tasks/TasksPage/Form/index.js","features/tasks/TasksPage/TasksList/styled.js","features/tasks/TasksPage/TasksList/index.js","features/tasks/TasksPage/searchQueryParamsName.js","features/tasks/TasksPage/Buttons/styled.js","features/tasks/TasksPage/styledButton.js","features/tasks/TasksPage/Buttons/index.js","features/tasks/TasksPage/ExampleTasksButton/styled.js","features/tasks/TasksPage/ExampleTasksButton/index.js","common/Section/styled.js","common/Section/index.js","common/Header/styled.js","common/Header/index.js","common/Main/styled.js","common/Main/index.js","common/Wrapper/styled.js","common/Wrapper/index.js","common/Subheader/styled.js","common/Subheader/index.js","features/tasks/TasksPage/Search/styled.js","features/tasks/TasksPage/Search/index.js","features/tasks/TasksPage/Search/queryParameters/useQueryParameters.js","features/tasks/TasksPage/Search/queryParameters/useReplaceQueryParameter.js","features/tasks/TasksPage/index.js","features/description.js","features/tasks/TaskPage/index.js","features/author/AuthorPage.js","common/Navigation/styled.js","common/Navigation/index.js","App.js","serviceWorker.js","GlobalStyle.js","features/tasks/getExampleTasks.js","features/tasks/tasksSaga.js","features/tasks/rootSaga.js","store.js","index.js","theme.js"],"names":["StyledForm","styled","form","theme","colors","black","tan","darkTransparentBlack","breakpoints","maxWidth","Input","input","Button","button","darkEbony","white","lightTrnsparentBlack","mineShft","saveTasksInLocalStorage","tasks","localStorage","setItem","JSON","stringify","tasksSlice","createSlice","name","initialState","parse","getItem","hideDoneTasks","loading","reducers","addTask","payload","push","toggleHideDoneTasks","state","toggleTasksDone","action","index","findIndex","task","id","done","removeTasks","splice","allTasksDone","forEach","fetchExampleTasks","setTasks","loadingExampleTasks","actions","selectTasksState","selectTasks","selectHideDone","selectAreTasksUndone","every","selectIsEveryTaskDone","selectAreTasksEmpty","length","selectLoadingExampleTasks","Form","useState","newTaskContent","setNewTaskContent","inputRef","useRef","dispatch","useDispatch","onSubmit","event","preventDefault","contentTrimmed","trim","content","nanoid","current","focus","ref","value","type","onChange","target","required","List","ul","Item","li","hidden","css","chartreuse","doneTasks","crimson","Icon","i","Content","p","StyledLink","Link","TasksList","location","useLocation","query","URLSearchParams","search","get","useSelector","filter","toUpperCase","includes","selectTasksByQuery","map","key","onClick","className","to","ToggleButtons","section","lightTransparentBlack","mineShaft","twine","gallery","darkGrey","Buttons","areTasksEmpty","areTasksUndone","isEveryTasksDone","disabled","Wrapper","div","TasksButton","isLoading","StyledSection","Section","title","body","Title","h1","spicyMix","Header","StyledMain","main","dawnPink","darkTrnsparentBlack","Main","children","Wrap","SubheaderTitle","h2","Subeader","Search","searchQueryParamsName","useQueryParameters","replaceQueryParameters","history","useHistory","searchParams","undefined","delete","set","pathname","toString","useReplaceQueryParameters","placeholder","TasksPage","Subheader","Description","TaskPage","useParams","taskId","find","getTaskById","Author","Nav","nav","StyledNavLink","NavLink","attrs","activeClassName","Navigation","path","AuthorPage","Boolean","window","hostname","match","GlobalStyle","createGlobalStyle","getExampleTasks","a","fetch","response","ok","Error","statusText","json","fetchExampleTasksHandler","localStorageTasksHandler","tasksSaga","put","delay","call","exampleTasks","console","error","alert","select","takeLatest","takeEvery","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","tasksReducer","middleware","run","ReactDOM","render","StrictMode","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f3493274.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\n  margin: 30px 50px;\n  border: 3px solid ${({ theme }) => theme.colors.black};\n  border-radius: 10px;\n  padding: 20px;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.tan};\n  box-shadow: 2px 2px 3px 3px\n    ${({ theme }) => theme.colors.darkTransparentBlack};\n  display: grid;\n  grid-template-columns: 3fr 1fr;\n  grid-gap: 20px;\n\n  @media (max-width: ${({ theme }) =>\n      theme.breakpoints.maxWidth}px) and (orientation: portrait) {\n    grid-template-columns: 1fr;\n    margin: 10px 20px;\n  }\n`;\nexport const Input = styled.input`\n  padding: 7px 0;\n  border: 2px solid ${({ theme }) => theme.colors.black};\n  border-radius: 7px;\n  width: 100%;\n`;\nexport const Button = styled.button`\n  font-family: \"Lato\", sans-serif;\n  text-transform: uppercase;\n  padding: 7px 0;\n  background-color: ${({ theme }) => theme.colors.darkEbony};\n  font-size: 15px;\n  border: 2px solid ${({ theme }) => theme.colors.black};\n  color: ${({ theme }) => theme.colors.white};\n  border-radius: 7px;\n  box-shadow: 2px 1px 2px 2px\n    ${({ theme }) => theme.colors.lightTrnsparentBlack};\n  text-shadow: 1px 1px 2px ${({ theme }) => theme.colors.mineShft};\n  transition: 0.3s;\n\n  &:hover {\n    filter: brightness(110%);\n    cursor: pointer;\n    transform: scaleX(1.1);\n  }\n\n  @media (max-width: ${({ theme }) =>\n      theme.breakpoints.maxWidth}px) and (orientation: portrait) {\n    margin: 5px 10px;\n    grid-template-columns: none;\n    grid-auto-flow: row;\n    grid-template-columns: 1;\n    justify-content: center;\n  }\n`;\n","const localStorageKey = \"tasks\";\n\nexport const saveTasksInLocalStorage = tasks => \n  localStorage.setItem(localStorageKey, JSON.stringify(tasks))\n;\n\nexport const getTasksfromLocalStorage = () => \n  JSON.parse(localStorage.getItem(localStorageKey)) || [];\n","import {\n  createSlice\n} from \"@reduxjs/toolkit\";\nimport {\n  getTasksfromLocalStorage\n} from \"./tasksLocalStorage\";\n\nconst tasksSlice = createSlice({\n  name: \"tasks\",\n  initialState: {\n    tasks: getTasksfromLocalStorage(),\n    hideDoneTasks: false,\n    loading: false,\n  },\n  reducers: {\n    addTask: ({\n      tasks\n    }, {\n      payload\n    }) => {\n      tasks.push(payload);\n    },\n    toggleHideDoneTasks: (state) => {\n      state.hideDoneTasks = !state.hideDoneTasks;\n    },\n    toggleTasksDone: (state, action) => {\n      const index = state.tasks.findIndex((task) => task.id === action.payload);\n      state.tasks[index].done = !state.tasks[index].done;\n    },\n    removeTasks: ({\n      tasks\n    }, action) => {\n      const index = tasks.findIndex((task) => task.id === action.payload);\n      tasks.splice(index, 1);\n    },\n    allTasksDone: (state) => {\n      state.tasks.forEach((task) => (task.done = true));\n    },\n    fetchExampleTasks: () => {},\n    setTasks: (state, {\n      payload: tasks\n    }) => {\n      state.tasks = tasks;\n    },\n    loadingExampleTasks: (state, {\n      payload\n    }) => {\n      state.loading = payload;\n    },\n  },\n});\n\nexport const {\n  addTask,\n  toggleHideDoneTasks,\n  toggleTasksDone,\n  removeTasks,\n  allTasksDone,\n  fetchExampleTasks,\n  setTasks,\n  loadingExampleTasks,\n} = tasksSlice.actions;\nexport const selectTasksState = (state) => state.tasks;\nexport const selectTasks = (state) => selectTasksState(state).tasks;\nexport const selectHideDone = (state) => selectTasksState(state).hideDoneTasks;\nexport const selectAreTasksUndone = (state) => {  selectTasks(state).every(({\n    done\n  }) => !done)};\nexport const selectIsEveryTaskDone = (state) =>\n  selectTasks(state).every(({\n    done\n  }) => done);\nexport const selectAreTasksEmpty = (state) => selectTasks(state).length === 0;\nexport const selectLoadingExampleTasks = (state) => state.tasks.loading;\nexport const getTaskById = (state, taskId) => selectTasks(state).find(({ id }) => id === taskId);\nexport const selectTasksByQuery = (state, query) => {const tasks = selectTasks(state);\n\n  if (!query || query.trim() === \"\"){\n    return tasks;\n  } \n  return tasks.filter(({ content }) => content.toUpperCase().includes(query.trim().toUpperCase()));\n};\n\n\nexport default tasksSlice.reducer;","import React, { useState, useRef } from \"react\";\nimport { StyledForm, Input, Button } from \"./styled\";\nimport { useDispatch } from \"react-redux\";\nimport { addTask } from \"../../tasksSlice\";\nimport { nanoid } from \"@reduxjs/toolkit\";\n\nconst Form = () => {\n  const [newTaskContent, setNewTaskContent] = useState(\"\");\n  const inputRef = useRef(null);\n  const dispatch = useDispatch();\n  const onFormSubmit = (event) => {\n    event.preventDefault();\n    const contentTrimmed = newTaskContent.trim();\n    if (contentTrimmed === \"\") {\n      return;\n    }\n    dispatch(\n      addTask({\n        content: contentTrimmed,\n        done: false,\n        id: nanoid(),\n      })\n    );\n\n    setNewTaskContent(\"\");\n    inputRef.current.focus();\n  };\n\n  return (\n    <StyledForm onSubmit={onFormSubmit}>\n      <label>\n        <Input\n          ref={inputRef}\n          value={newTaskContent}\n          name=\"task\"\n          type=\"text\"\n          onChange={(event) => setNewTaskContent(event.target.value)}\n          required\n        />\n      </label>\n      <Button>add task</Button>\n    </StyledForm>\n  );\n};\nexport default Form;\n","import styled, { css } from \"styled-components\";\nimport {Link} from \"react-router-dom\";\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 5px;\n\n  @media (max-width: ${({ theme }) =>\n      theme.breakpoints.maxWidth}px) and (orientation: portrait) {\n    padding: 0px;\n  }\n`;\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  max-width: 80%;\n  margin: 0 auto;\n  justify-content: space-between;\n  align-items: center;\n  text-transform: uppercase;\n\n  ${({ hidden }) =>\n    hidden &&\n    css`\n      display: none;\n    `}\n\n  @media (max-width: ${({ theme }) =>\n    theme.breakpoints.maxWidth}px) and (orientation: portrait) {\n    margin: 0;\n    max-width: 100%;\n  }\n`;\nexport const Button = styled.button`\n  border: none;\n  width: 100%;\n  max-width: 30px;\n  height: 30px;\n  margin: 10px;\n  background-color: ${({ theme }) => theme.colors.chartreuse};\n  box-shadow: 0.5px 0.5px 3px 3px ${({ theme }) => theme.colors.black};\n\n  ${({ doneTasks }) =>\n    doneTasks &&\n    css`\n      background-color: ${({ theme }) => theme.colors.chartreuse};\n      transition: 0.3s;\n      transition: 0.3s;\n\n      &:hover {\n        filter: brightness (110%);\n      }\n      &:active {\n        filter: brightness(120%);\n      }\n    `};\n\n  ${({ removeTasks }) =>\n    removeTasks &&\n    css`\n      background-color: ${({ theme }) => theme.colors.crimson};\n\n      &:hover {\n        filter: brightness(110%);\n      }\n      &:active {\n        filter: brightness(120%);\n      }\n    `};\n`;\nexport const Icon = styled.i`\n  font-family: \"FontAwesome\";\n  font-style: normal;\n  font-size: 20px;\n`;\nexport const Content = styled.p`\n  padding: 5px 15px;\n\n  ${({ done }) =>\n    done &&\n    css`\n      text-decoration: line-through;\n    `};\n`;\n\nexport const StyledLink = styled(Link)`\ncolor:${({ theme }) => theme.colors.black};\ntext-decoration:none;\n&.hover{\n  cursor:pointer;\n}\n`","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { List, Item, Button, Icon, Content, StyledLink } from \"./styled\";\nimport { toggleTasksDone, removeTasks, selectHideDone, selectTasksByQuery } from \"../../tasksSlice\";\nimport { useLocation} from \"react-router-dom\";\nimport searchQueryParamsName from \"../searchQueryParamsName\";\nconst TasksList = () => {\n\n  const location = useLocation();\n  const query = (new URLSearchParams(location.search)).get(searchQueryParamsName);\n  const tasks = useSelector(state => selectTasksByQuery(state, query));\n  const hideDoneTasks = useSelector(selectHideDone);\n  const dispatch = useDispatch();\n\n  return (\n    <List>\n      {tasks.map((task) => (\n        <Item key={task.id} hidden={task.done && hideDoneTasks}>\n          <Button\n            doneTasks\n            onClick={() => {\n              dispatch(toggleTasksDone(task.id));\n            }}\n          >\n            {task.done ? <Icon className=\"fas fa-check\"></Icon> : \"\"}\n          </Button>\n          <Content done={task.done}><StyledLink to = {`/tasks/${task.id}`}>{task.content}</StyledLink> </Content>\n          <Button\n            removeTasks\n            onClick={() => {\n              dispatch(removeTasks(task.id));\n            }}\n          >\n            <Icon className=\"fas fa-trash\"></Icon>\n          </Button>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default TasksList;\n","export default \"search\";","import styled, { css } from \"styled-components\";\n\nexport const ToggleButtons = styled.section`\n  background-color: ${({ theme }) => theme.colors.tan};\n  border-radius: 7px;\n  border: 3px solid black;\n  box-shadow: 2px 1px 2px 2px\n    ${({ theme }) => theme.colors.lightTransparentBlack};\n  text-shadow: 1px 1px 2px ${({ theme }) => theme.colors.mineShaft};\n  display: flex;\n  justify-content: flex-end;\n  margin: 0 50px;\n  padding: 5px;\n\n  @media (max-width: ${({ theme }) =>\n      theme.breakpoints.maxWidth}px) and (orientation: portrait) {\n    margin: 0px 10px;\n  }\n\n  ${({ hidden }) =>\n    hidden &&\n    css`\n      display: none;\n    `}\n`;\n","import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  border: 1px solid black;\n  border-radius: 7px;\n  background-color: ${({ theme }) => theme.colors.twine};\n  text-shadow: 2px 2px 2px ${({ theme }) => theme.colors.gallery};\n  text-transform: uppercase;\n  padding: 5px;\n  margin-right: 5px;\n\n  &:hover {\n    cursor: pointer;\n    color: ${({ theme }) => theme.colors.darkGrey};\n    background-color: ${({ theme }) => theme.colors.tan};\n  }\n  @media (max-width: ${({ theme }) =>\n      theme.breakpoints.maxWidth}px) and (orientation: portrait) {\n    margin: 10px;\n    flex-direction: column;\n  }\n`;\n","import React from \"react\";\nimport { ToggleButtons } from \"./styled\";\nimport { Button } from \"../styledButton\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectTasksState, toggleHideDoneTasks, allTasksDone, selectAreTasksEmpty, selectAreTasksUndone, selectIsEveryTaskDone } from \"../../tasksSlice\";\n\nconst Buttons = () => {\n  const { tasks, hideDoneTasks } = useSelector(selectTasksState);\n  const areTasksEmpty = useSelector(selectAreTasksEmpty);\n  const areTasksUndone = useSelector(selectAreTasksUndone);\n  const isEveryTasksDone = useSelector(selectIsEveryTaskDone);\n  const dispatch = useDispatch();\n  return (\n    <ToggleButtons hidden={areTasksEmpty}>\n      <Button\n        onClick={() => {\n          dispatch(toggleHideDoneTasks());\n        }}\n        disabled={areTasksUndone}\n      >\n        {hideDoneTasks ? \"Show\" : \"Hide\"} completed tasks\n      </Button>\n      <Button\n        onClick={() => {\n          dispatch(allTasksDone(tasks.done));\n        }}\n        disabled={isEveryTasksDone}\n      >\n        Mark all tasks as completed\n      </Button>\n    </ToggleButtons>\n  );\n};\n\nexport default Buttons;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n`;\nexport const Info = styled.p`\n  font-size: 20px;\n`;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Wrapper } from \"./styled\";\nimport { Button } from \"../styledButton\";\nimport { fetchExampleTasks, selectLoadingExampleTasks } from \"../../tasksSlice\";\n\nconst TasksButton = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoadingExampleTasks);\n  return (\n    <Wrapper>\n      <Button\n        onClick={() => {\n          dispatch(fetchExampleTasks());\n        }}\n      >\n        {isLoading ? \"Loading...\" : \"Add example tasks\"}\n      </Button>\n    </Wrapper>\n  );\n};\nexport default TasksButton;\n","import styled from \"styled-components\";\n\nexport const StyledSection = styled.section`\n  background-color: ${({ theme }) => theme.colors.tan};\n  border-radius: 7px;\n  border: 3px solid ${({ theme }) => theme.colors.black};\n  box-shadow: 2px 1px 2px 2px\n    ${({ theme }) => theme.colors.lightTransparentBlack};\n  text-shadow: 1px 1px 2px ${({ theme }) => theme.colors.mineShaft};\n  margin: 20px;\n\n  @media (max-width: ${({ theme }) =>\n      theme.breakpoints.maxWidth}px) and (orientation: portrait) {\n    margin: 10px;\n  }\n`;\n","import React from \"react\";\nimport { StyledSection } from \"./styled\";\n\nconst Section = ({ title, body }) => (\n  <StyledSection>\n    {title}\n    {body}\n  </StyledSection>\n);\n\nexport default Section;\n","import styled from \"styled-components\";\n\nexport const Title = styled.h1`\n  padding: 10px;\n  font-family: \"Galada\", cursive;\n  text-transform: uppercase;\n  text-align: center;\n  font-size: 50px;\n  border: 5px solid ${({ theme }) => theme.colors.black};\n  color: ${({ theme }) => theme.colors.white};\n  border-radius: 10px;\n  background-color: ${({ theme }) => theme.colors.spicyMix};\n  box-shadow: 5px 5px 2px 2px\n    ${({ theme }) => theme.colors.lightTransparentBlack};\n  text-shadow: 4px 4px 2px ${({ theme }) => theme.colors.mineShaft};\n  letter-spacing: 2px;\n`;\n","import React from \"react\";\nimport { Title } from \"./styled\";\n\nconst Header = ({ title }) => (\n  <header>\n    <Title>{title}</Title>\n  </header>\n);\n\nexport default Header;\n","import styled from \"styled-components\";\n\nexport const StyledMain = styled.main`\n  background-color: ${({ theme }) => theme.colors.dawnPink};\n  padding-top: 20px;\n  border: 4px solid ${({ theme }) => theme.colors.black};\n  border-radius: 10px;\n  box-shadow: 5px 5px 6px 6px ${({ theme }) => theme.colors.darkTrnsparentBlack};\n  margin: 15px;\n`;\n","import React from \"react\";\nimport { StyledMain } from \"./styled\";\n\nconst Main = ({ children }) => <StyledMain>{children}</StyledMain>;\nexport default Main;\n","import styled from \"styled-components\";\n\nexport const Wrap = styled.div`\n \n  max-width: 1200px;\n  margin: 0 auto;\n`;\n","import React from \"react\";\nimport { Wrap } from \"./styled\";\n\nconst Wrapper = ({ children }) => <Wrap>{children}</Wrap>;\nexport default Wrapper;\n","import styled from \"styled-components\";\n\nexport const SubheaderTitle = styled.h2`\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 30px;\n  text-shadow: 2px 2px 2px ${({ theme }) => theme.colors.gallery};\n  border-bottom: 2px solid ${({ theme }) => theme.colors.black};\n  padding: 20px;\n  margin: 0 20px;\n`;\n","import React from \"react\";\nimport { SubheaderTitle } from \"./styled\";\n\nconst Subeader = ({ title }) => <SubheaderTitle>{title}</SubheaderTitle>;\n\nexport default Subeader;\n","import styled from \"styled-components\";\n\nexport const StyledForm = styled.form`\n  margin: 30px 50px;\n  border: 3px solid ${({ theme }) => theme.colors.black};\n  border-radius: 10px;\n  padding: 20px;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.tan};\n  box-shadow: 2px 2px 3px 3px\n    ${({ theme }) => theme.colors.darkTransparentBlack};\n  display: grid;\n  grid-template-columns: 1fr;\n\n`;\nexport const Input = styled.input`\n  padding: 7px;\n  border: 2px solid ${({ theme }) => theme.colors.black};\n  border-radius: 7px;\n`;\n\n","import React from \"react\";\nimport searchQueryParamsName from \"../searchQueryParamsName\";\nimport { StyledForm, Input} from \"./styled\";\nimport {useQueryParameters} from \"./queryParameters/useQueryParameters\"\nimport { useReplaceQueryParameters } from \"./queryParameters/useReplaceQueryParameter\";\n\n  const Search = () => { \n    \n    const query = useQueryParameters(searchQueryParamsName);\n    const replaceQueryParameters = useReplaceQueryParameters();\n\n    const onInputChange = ({ target }) => {\n      replaceQueryParameters({ \n        key: searchQueryParamsName,\n        value: target.value.trim() !== \"\" ? target.value : undefined,\n      });\n    };\n\n    return (\n    <StyledForm>\n        <Input\n          placeholder=\"Filter tasks\"\n          value = {query || \"\"}\n          onChange = {onInputChange} \n        /> \n    </StyledForm>\n  );\n  };\nexport default Search;\n","import {\n  useLocation\n} from \"react-router-dom\";\n\n\nexport const useQueryParameters = (searchQueryParamsName) => {\n\n  const location = useLocation();\n  return new URLSearchParams(location.search).get(searchQueryParamsName)\n};","import {useLocation, useHistory} from \"react-router-dom\";\n\nexport const useReplaceQueryParameters = () => {\n\n  const location = useLocation();\n  const history = useHistory();\n  const searchParams = new URLSearchParams(location.search);\n\nreturn ({value, key}) => {\n  \n  if(value === undefined) {\n  searchParams.delete(key);\n } else { \n searchParams.set(key, value)\n}\n\nhistory.push(`${location.pathname}?${searchParams.toString()}`)}\n\n};\n","import React from \"react\";\nimport Form from \"./Form\";\nimport TasksList from \"./TasksList\";\nimport Buttons from \"./Buttons\";\nimport TasksButton from \"./ExampleTasksButton\";\nimport Section from \"../../../common/Section\";\nimport Header from \"../../../common/Header\";\nimport Main from \"../../../common/Main\";\nimport Wrapper from \"../../../common/Wrapper\";\nimport Subheader from \"../../../common/Subheader\";\nimport Search from \"./Search\";\nfunction TasksPage() {\n\n\n  return (\n    <Wrapper>\n      <Header title=\"To do list\" />\n      <Main>\n        <TasksButton />\n        <Form />\n        <Search />\n        <Buttons />\n        <Section title={<Subheader title=\"task list\" />} body={<TasksList />} />\n      </Main>\n    </Wrapper>\n  );\n}\n\nexport default TasksPage;\n","import styled from \"styled-components\"\n\nexport const Description = styled.p `\ntext-shadow:none;\npadding:0 10px;\n`","import React from \"react\";\nimport Section from \"..//../../common/Section\";\nimport Main from \"../../../common/Main\";\nimport Wrapper from \"../../../common/Wrapper\";\nimport Header from \"../../../common/Header\";\nimport { useParams } from \"react-router-dom\"\nimport { useSelector } from \"react-redux\";\nimport { getTaskById } from \"../tasksSlice\";\nimport Subheader from \"../../../common/Subheader\"\nimport {Description} from \"../../description\"\n\nfunction TaskPage() {\n\n  const { id } = useParams();\n  const task = useSelector(state => getTaskById(state, id));\n\n  return (\n    <Wrapper>\n      <Header title=\"task details\" />\n      <Main>\n        <Section \n        title={<Subheader title={task ? task.content : \"Task not found 🙁\"}/>}\n        body={<Description><strong>Completed: </strong>{task.done ? \"Yes 👍\" : \"No😟\"} </Description>} />\n      </Main>\n    </Wrapper>\n  );\n}\n\nexport default TaskPage;\n","import React from \"react\";\nimport Section from \"../../common/Section\";\nimport Header from \"../../common/Header\";\nimport Main from \"../../common/Main\";\nimport Wrapper from \"../../common/Wrapper\";\nimport Subheader from \"../../common/Subheader\"\nimport {Description} from \"../description\"\n\nfunction Author() {\n  return (\n    <Wrapper>\n      <Header title=\"About author\" />\n      <Main>\n        <Section\n        title={<Subheader title=\"Magdalena Checinski\" />}\n       \n        body={\n        <Description> \n        <>\n           Hi! 😃 <br></br>I am a junior frontend developer. I have been learning programming since 2020. I started with the <strong>\"Become a Frontend Developer\"</strong> course at Youcode Academy. This To Do List is one of the applications written for this course.\n        </>\n        </Description>} />\n      </Main>\n    </Wrapper>\n  );\n};\nexport default Author;\n","import styled from \"styled-components\"\nimport {\n  NavLink\n} from \"react-router-dom\";\n\nconst activeClassName = \"active\"\n\nexport const Nav = styled.nav `\n  text-transform: uppercase;\n  margin:5px;\n  border: 3px solid ${({ theme }) => theme.colors.black};\n  color: ${({ theme }) => theme.colors.white};\n  border-radius: 10px;\n  background-color: ${({ theme }) => theme.colors.spicyMix};\n  text-shadow: 2px 2px 1px ${({ theme }) => theme.colors.mineShaft};\n  letter-spacing: 2px;\n`;\n\nexport const List = styled.ul `\ndisplay: flex;\njustify-content:center;\nmargin:0 auto;\n`;\n\nexport const Item = styled.li `\nlist-style:none;\nfont-size: 18px;\nmargin: 10px;\n`;\n\nexport const StyledNavLink = styled(NavLink).attrs(() => ({\n  activeClassName\n}))\n`\ntext-decoration: none;\ncolor: ${({ theme }) => theme.colors.white};\n&.${activeClassName} {\n  background-color: ${({ theme }) => theme.colors.tan};\n  border-radius: 7px;\n  border: 2px solid ${({ theme }) => theme.colors.black};\n  box-shadow: 2px 1px 2px 2px\n    ${({ theme }) => theme.colors.lightTransparentBlack};\n  text-shadow: 1px 1px 2px ${({ theme }) => theme.colors.mineShaft};\n  padding: 2px;\n}\n`;","import React from \"react\"\nimport { Nav, StyledNavLink, Item, List } from \"./styled\"\n\n\nconst Navigation = () => (  \n<Nav>\n  <List>\n    <Item>\n      <StyledNavLink activeClassName=\"active\" to=\"/tasks\">Tasks List</StyledNavLink>\n     </Item>\n     <Item>\n      <StyledNavLink activeClassName=\"active\" to=\"/author\">Author</StyledNavLink>\n     </Item>\n   </List>\n  </Nav>\n  \n);\n\nexport default Navigation;  ","import React from \"react\";\nimport {\n  HashRouter,\n  Switch,\n  Route, Redirect\n} from \"react-router-dom\";\nimport TasksPage from \"./features/tasks/TasksPage\";\nimport TaskPage from \"./features/tasks/TaskPage\";\nimport AuthorPage from \"./features/author/AuthorPage\";\nimport Navigation from \"./common/Navigation\"\n\nexport default () => (\n  <HashRouter>\n  <Navigation />\n    <Switch>\n      <Route path =\"/tasks/:id\">\n        <TaskPage/>\n        </Route>\n      <Route path = \"/tasks\"><TasksPage/></Route>\n      <Route path = \"/author\"><AuthorPage/></Route>\n      <Route path = \"/\"><Redirect to = \"/tasks\"></Redirect></Route>\n    </Switch>\n\n  </HashRouter>\n)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\nhtml {\n    box-sizing: border-box;\n    font-family: \"Lato\", sans-serif;\n}\n\n*, ::after, ::before {\n  box-sizing: inherit;\n}\n\nbody {\n  background-image: url(https://cdn.pixabay.com/photo/2016/03/15/02/42/floor-1256804_960_720.jpg);\n  background-position: center;\n  background-size: cover;\n  background-attachment: fixed;\n}\n`;\n","export const getExampleTasks = async () => {\n  const response = await fetch(\"/todo-list-react/exampleTasks.json\");\n  if (!response.ok) {\n    new Error(response.statusText);\n  }\n\n  return await response.json();\n};\n","import {\n  takeLatest,\n  delay,\n  call,\n  put,\n  select,\n  takeEvery\n} from \"redux-saga/effects\";\nimport {\n  fetchExampleTasks,\n  setTasks,\n  selectTasks,\n  loadingExampleTasks\n} from \"./tasksSlice\";\nimport {\n  getExampleTasks\n} from \"./getExampleTasks\";\nimport {\n  saveTasksInLocalStorage\n} from \"./tasksLocalStorage\";\n\nexport function* fetchExampleTasksHandler() {\n  try {\n    yield put(loadingExampleTasks(true));\n    yield delay(1000);\n    const exampleTasks = yield call(getExampleTasks);\n    yield put(setTasks(exampleTasks));\n    yield put(loadingExampleTasks(false));\n  } catch (error) {\n    yield call(console.error, error);\n    yield call(alert, \"Oops, something's wrong, sorry \");\n    yield put(loadingExampleTasks(false));\n  }\n}\n\n\n  function* localStorageTasksHandler() {\n    const tasks = yield select(selectTasks);\n    yield call(saveTasksInLocalStorage, tasks);\n  }\n\nexport function* tasksSaga() {\n  yield takeLatest(fetchExampleTasks.type, fetchExampleTasksHandler);\n  yield takeEvery(\"*\", localStorageTasksHandler)\n}","import {\n  all\n} from \"redux-saga/effects\"\nimport {\n  tasksSaga\n} from \"./tasksSaga\"\n\nexport default function* rootSaga() {\n  yield all([\n    tasksSaga(),\n  ]);\n};","import { configureStore } from \"@reduxjs/toolkit\";\nimport createSagaMiddleware from \"redux-saga\";\nimport tasksReducer from \"./features/tasks/tasksSlice\";\nimport rootSaga from \"./features/tasks/rootSaga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = configureStore({\n  reducer: {\n    tasks: tasksReducer,\n  },\n  middleware: [sagaMiddleware],\n});\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"./theme\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { GlobalStyle } from \"./GlobalStyle\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle />\n        <App />\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const theme = {\n  colors: {\n    black: \"#000000\",\n    darkTransparentBlack: \"#000000b3\",\n    lightTransparentBlack: \"#00000066\",\n    darkGrey: \"#333333\",\n    white: \"#ffffff\",\n    mineShaft: \"#222222\",\n    twine: \"#c39f6f\",\n    gallery: \"#eeeeee\",\n    tan: \"#c7a67a\",\n    darkEbony: \"#341f04\",\n    spicyMix: \"#8b6e46\",\n    dawnPink: \"#f0e9e0\",\n    chartreuse: \"#7fff00\",\n    crimson: \"#dc143c\",\n  },\n\n  breakpoints: {\n    maxWidth: 414,\n  },\n};\n"],"sourceRoot":""}